感谢https://cultofthepartyparrot.com/的表情包
https://blog.csdn.net/u012468376/article/details/73350998的canvas标签使用教程
1.创建一个html页面
导入相关js文件(记得先导入框架再导入工具库,以及确保路径正确)
准备一个常见格式的图片,比如parrot.jpg
代码如下:
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>快速上手</title>
</head>
<body>
	<div id="catCan">
		<!-- 插canvas的地方 -->
	</div>
</body>
<script type="text/javascript" src="catCanFrameWork2.1.0.js"></script>
<script type="text/javascript" src="catCanFrameWork2.1.0-tool.js"></script>
<script type="text/javascript">
	//写代码的地方↓

	//写代码的地方↑
</script>
</html>
2.创建一个供catCan调用的动画对象:
	//写代码的地方↓
	var ani = {
		"width":128,
		"height":128,
		"pic":[
			"parrot.jpg"
		],
		"img":[
			[0,0,0,128,128],
			[0,0,0,128,128]
		],
		"animation":[
			[0,0,0,0,"drEll(40,10,-4,40,50);"],
			[1,1,0,0,"drEll(40,10,4,80,50);"]
		],
		"playList":[
			[10000,0,1],
			[10000,1,0]
		]
	}
	//写代码的地方↑
3.写逻辑代码(为节约篇幅省略了一部分):
	//写代码的地方↓
	var ani = {
		
		......

	}
	window.onload = function() {
		var catCan = new CatCan("catCan",ani,"xy",{w:1800,h:900,t:0.5},0);//只有前两个是必须的
	}
	//写代码的地方↑

好的做完了,打开浏览器,两只鹦鹉开始摇头晃脑,接下来我解释一下:

关于动画
第二步ani中的width和height是定义"动画舞台"默认大小的参数,如果第三步中的逻辑代码没有指定大小则会由这两个数值进行计算
pic是图片文件的绝对或相对路径名,你可以使用多张图片,也可以使用网络路径,例如示例中使用的图片来自于网络https://cultofthepartyparrot.com/parrots/hd/parrot.gif,你可以直接用该路径替换parrot.jpg,不过gif文件只会取第一帧,而且图片的加载可能需要数秒的时间,我比较主张将多张图片拼合在一起,使用时再进行裁剪
img是图片切片,第一个参数是pic的角标(从0开始),第二个和第三个参数是截取坐标的x值与y值,第四个和第五个则是截取的宽度与高度.你可以将宽度高度缩小一半,然后大概就只能看见四分之一只鹦鹉了
animation是动画的逻辑,最多可以有十个参数,角标为0-9,分别是:
	0向上的层数,可能不是那么直观,我来举个例子:
		如果你想创建一个陆行鸟的动画,有头,身体,双脚三个部分,你先画身体,然后画头,再画左右脚.你肯定希望"头和双脚长在身体上"而不是"两只脚长在头上";这时候你需要将左右脚的0号参数的值设定为1,意为"它和刚刚绘制的头没有关系";如果设为2那么和身体也没关系;如果设为3,那么会出错
	1切片序号,即img的角标,本样例中这个参数设为0和1没有任何区别,因为两个切片是相同的
		你可以把其中一只鹦鹉切掉一半来感受一下
	2切片最初绘制位置的横坐标,在该样例中感受不出来,因为鹦鹉的位置很快就被drEll函数改变了
		如果想感受这个函数的作用请把动画的参数4置为空字符串
	3切片最初绘制位置的纵坐标,基本同上
	----以上四个参数不可以为空,以下参数可以为空或以默认值占位----
	4执行的函数,默认值为空字符串""
		这里直接使用了工具库(CatTool1.1.0.js)内已经写好的函数,详细可以看框架本体(catCanFrameWork3.0.0.js)最后的部分[工具集]的相关注释
	5旋转的角度,顺时针弧度制,默认值0
		例如3.14约顺时针旋转180度,0.535是顺时针旋转约45度
	6绘制坐标轴原点的横向移动距离,会影响画在它上面的图层,默认值0
	7纵向,同上
	8高度缩放,会影响画在它上面的图层,默认值0
	9宽度,同上
playList是动画队列,第一个参数是该动画的持续时间,单位为毫秒,如果没有干扰会循环播放该动画

关于逻辑控制
因为是快速上手,所以逻辑控制只有一行.动画队列,数据传输,数据域,插件制作,响应器虽然集成好了但是都没有进行介绍.感兴趣的话可以翻看代码注释或者等待我的<中速上手>咕,接下来我对这行代码进行一下简单的介绍
var catCan = new CatCan("catCan",ani,"xy",{w:250,h:165,t:1},0);//只有前两个是必须的
1.添加canvas标签的div标签的id,div标签的内容将会被覆盖
2.编写的动画对象,至少要包含width,height,img,animation,playList属性
3.参数列表包含该字符串时,鼠标每次点击画板会在控制台打印坐标(f12打开控制台)
4.w与h是画板的宽度高度,默认使用配置文件中的宽度与高度;t(可选)是(相较于配置文件的)缩放比例,若不设置会根据w与h自动缩放
5.初始化结束后将会播放的动画,可以置空并在之后使用play方法播放动画(play方法的用法中速上手再说咕)